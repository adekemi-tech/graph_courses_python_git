# Imports

```{python}
import pandas as pd

pd.options.mode.copy_on_write = True
```
# Dataset

```{python}
counties = pd.read_csv("data/us_counties_data.csv")
counties
```

```{python}
area_df = counties [["county", "area_sq_miles", "pop_20"]]
area_df
```

# Creating New Variables

```{python}
# New var with area in sq km
area_df["area_sq_km"] = area_df["area_sq_miles"] * 2.59
# New var with area in hectares
area_df["area_hectares"] = area_df["area_sq_km"] * 100
area_df
```
# Practice Q: Area in Acres

Using the 'area_df' dataset, create a new column called 'area_sq_miles' variable by 640. Store the result back into 'area_df' and display the DataFrame.

```{python}
area_df["area_acres"] = area_df["area_sq_miles"] * 640
area_df
```
# Modifying Existing Variables

```{python}
area_df["area_sq_km"] = area_df["area_sq_km"].round(2)
area_df
```
# Practice Q: Rounding 'area_acres'
Using the 'area_df dataset', round the 'area_acres' variable to one decimal place. Update the Dataframe and display it.


```{python}
area_df["area_acres"] = area_df["area_acres"].round(2)
area_df
```

# Calcukating with Multiple Variables

```{python}
# Calculate and sort
area_df["pop_per_sq_km"] = (area_df["pop_20"] / area_df["area_sq_km"]).round(1)
area_df = area_df.sort_values(by="pop_per_sq_km", ascending=False)

# Display result
area_df
```

# Practice Q: Foreign Born Percentage
Use the 'counties' datatset to calculate the percentage of foreign_born residents in each country. (Remember to multiply your proportion by 100). The variable 'foreign_born_num' shows the number of foreign-born residents and pop_20 shows the total population. Which two counties have the highest percentage of foreign-born residents?

```{python}
counties["foreign_born_pct"] = (counties["foreign_born_num"] / counties["pop_20"]) * 100
counties
```

```{python}
# The top 2 counties with the highest percentage of foreign-born residents

counties_sorted = counties.sort_values(by="foreign_born_pct", ascending=False)

top_counties = counties_sorted.head(2)

top_counties[["county", "state", "foreign_born_pct"]]
```

# Creating Boolean Variable
```{python}
changes_df = counties[["county", "pop_change_2010_2020","pct_emp_change_2010_2021"]]
changes_df
```

```{python}
changes_df["pop_increase"] = changes_df["pop_change_2010_2020"] > 0
changes_df["emp_increase"] = changes_df["pct_emp_change_2010_2021"] > 0
changes_df
```

```{python}
changes_df.query("pop_increase == True & emp_increase == False")
changes_df.query("pop_increase & ~(emp_increase)")
```

# Practice Q: Categorize Counties by Foreign_Born Population
In a previous practice question, we calculated the percentage of foreign-born residents in each county. Now, create a Boolean variable that is True if the 'foreign-born-pct-gt-30' that is True if the percentage is greater than 30%.

When you're done, query the DataFrame to show only counties where 'foreign_born_pct_gt_30' is True. You should get 24 rows

```{python}
counties["foreign_born_pct_gt_30"] = counties["foreign_born_pct"] > 30
high_foreign_born = counties.query("foreign_born_pct_gt_30 == True")
high_foreign_born.shape[0]
```

# Copy on Write Warning
```{python}
pd.options.mode.copy_on_write = True

counties_mini = counties[["county", "area_sq_miles"]]
counties_mini["area_sq_miles"] = counties_mini["area_sq_miles"].round(2)
counties_mini
```